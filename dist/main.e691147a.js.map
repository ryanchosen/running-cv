{"version":3,"sources":["main.js"],"names":["htmlArea","document","querySelector","circleSize","body","clientWidth","map","item","string","fast","str","styleStr","fn","n","setTimeout","length","charCodeAt","innerHTML","style","scrollTo","window","console","log"],"mappings":";AAAA,IAAIA,EAAWC,SAASC,cAAc,aAGlCC,EAAa,CAAC,IAAI,KACnBF,SAASG,KAAKC,aAAa,MAC1BF,EAAWA,EAAWG,IAAI,SAACC,GAAOA,OAAAA,EAAK,KAE3CJ,EAAWA,EAAWG,IAAI,SAACC,GAAOA,OAAAA,EAAK,OACvC,IAAIC,EASQL,6HAAAA,OAAAA,EAAW,GACVA,kBAAAA,OAAAA,EAAW,GAmBXA,gbAAAA,OAAAA,EAAW,GACVA,mBAAAA,OAAAA,EAAW,GASZA,iSAAAA,OAAAA,EAAW,GACVA,mBAAAA,OAAAA,EAAW,GAxCzB,oQAiDIM,EAAO,IACPC,EAAM,GACNC,EAAW,GAQf,SAASC,EAAGC,GACA,IAANA,GAGFC,WAAW,WACTN,EAAOO,OAAOF,GAAG,KAAKJ,EAAK,IAC3BD,EAAOO,OAAOF,GAAG,MAAMJ,EAAK,IACmB,KAA3CD,EAAOA,EAAOO,OAASF,GAAGG,aAC5BN,GAAY,OACwC,KAA3CF,EAAOA,EAAOO,OAASF,GAAGG,aACnCN,GAAY,SAEZA,GAAYF,EAAOA,EAAOO,OAASF,GAErCF,GAAsBH,EAAOA,EAAOO,OAASF,GAC7Cb,EAASiB,UAAYP,EACrBQ,MAAMD,UAAYN,EAClBX,EAASmB,SAAS,EAAG,OACrBC,OAAOD,SAAS,EAAG,OACnBE,QAAQC,IAAIZ,GACZE,EAAGC,EAAI,IACNJ,GAGPG,EAAGJ,EAAOO","file":"main.e691147a.js","sourceRoot":"..\\src","sourcesContent":["let htmlArea = document.querySelector(\"#htmlArea\");\r\n// html中多个空格会被展示一个空格\r\n// 在pc mobile上分别控制一下八卦的大小\r\nlet circleSize = [400,200]\r\nif(document.body.clientWidth<=500){\r\n    circleSize=circleSize.map((item)=>item/2)\r\n}\r\ncircleSize=circleSize.map((item)=>item+'px')\r\nlet string = `\r\n/* 你好，我叫Ryan\r\n接下来我演示一下我的前端功底\r\n我正在画一个八卦\r\n我写到哪一句，CSS就立马会生效\r\n首先我要准备一个div\r\n*/\r\n#div1{\r\n    border:1px solid red;\r\n    width:${circleSize[0]};\r\n    height:${circleSize[0]};\r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n注意看好了\r\n首先，把 div 变成一个圆\r\n*/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 30px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/* 八卦是阴阳形成的一黑一白*/\r\n/* from https://cssgradient.io*/\r\n#div1{\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 用伪元素加两个神秘的小球 */\r\n#div1::before{\r\n    width: ${circleSize[1]};\r\n    height: ${circleSize[1]};\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-radius: 50%;\r\n    background: rgb(255,255,255);\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 14%, rgba(0,0,0,1) 14%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width: ${circleSize[1]};\r\n    height: ${circleSize[1]};\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-radius: 50%;\r\n    background: rgb(0,0,0);\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 14%, rgba(255,255,255,1) 14%, rgba(255,255,255,1) 100%);\r\n}\r\n`;\r\nlet fast = 100;\r\nlet str = \"\";\r\nlet styleStr = \"\";\r\n// string=string.replace(/\\n/g,'<br>');\r\n// replace只会replace第一个\r\n// 所以需要动用正则\r\n// 如何确保string中哪些是\\n?\r\n// string.charCodeAt\r\n// innerHTML会把字符串里的html标签解析出来\r\n\r\nfunction fn(n) {\r\n  if (n === 0) {\r\n    return;\r\n  } else {\r\n    setTimeout(() => {\r\n      string.length-n>=50&&(fast=50)\r\n      string.length-n>=200&&(fast=10)\r\n      if (string[string.length - n].charCodeAt() === 10) {\r\n        str = str + \"<br>\";\r\n      } else if (string[string.length - n].charCodeAt() === 32) {\r\n        str = str + \"&nbsp;\";\r\n      } else {\r\n        str = str + string[string.length - n];\r\n      }\r\n      styleStr = styleStr + string[string.length - n];\r\n      htmlArea.innerHTML = str;\r\n      style.innerHTML = styleStr;\r\n      htmlArea.scrollTo(0, 99999);\r\n      window.scrollTo(0, 99999);\r\n      console.log(str);\r\n      fn(n - 1);\r\n    }, fast);\r\n  }\r\n}\r\nfn(string.length);\r\n"]}